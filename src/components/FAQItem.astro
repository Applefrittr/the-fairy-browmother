---
const { question, answer } = Astro.props;
---

<faq-item class="flex flex-col items-center w-full">
  <div class="font-bold flex gap-2 justify-between items-center w-full">
    {question}
    <button
      class="p-3 px-4 text-white bg-[var(--dark-purp)] rounded-[8px] ml-4 hover:cursor-pointer h-max"
      >Expand</button
    >
  </div>
  <p
    class="mx-4 px-4 bg-[var(--light-purp)] rounded-[8px] h-max max-h-0 transition-all duration-500 ease-linear hidden overflow-hidden"
  >
    {answer}
  </p>
</faq-item>

<script>
  class FAQItem extends HTMLElement {
    connectedCallback() {
      const btn = this.querySelector("button");
      const p = this.querySelector("p");

      btn?.addEventListener("click", () => {
        if (p?.classList.contains("hidden")) {
          p?.classList.toggle("hidden");
          btn.innerText = "Hide";

          setTimeout(() => {
            p?.classList.toggle("py-4");
            p?.classList.toggle("my-4");
            p?.classList.toggle("max-h-[425px]");
          }, 100);
        } else {
          btn.innerText = "Expand";

          p?.classList.toggle("py-4");
          p?.classList.toggle("my-4");
          p?.classList.toggle("max-h-[425px]");

          setTimeout(() => {
            p?.classList.toggle("hidden");
          }, 500);
        }
      });
    }
  }
  customElements.define("faq-item", FAQItem);
</script>
